<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:cls="clr-namespace:vMixController.Classes"
        xmlns:c="clr-namespace:vMixController.Converters"
        xmlns:ctrls="clr-namespace:vMixController.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:props="clr-namespace:vMixController.Properties"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:e="clr-namespace:vMixController.Extensions"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:this="clr-namespace:vMixController"
        xmlns:vm="clr-namespace:vMixController.ViewModel"
        xmlns:skin="clr-namespace:vMixControllerSkin;assembly=vMixControllerSkin"
        x:Class="vMixController.MainWindow"
        xmlns:wpfc="clr-namespace:NKristek.Wpf.Converters;assembly=NKristek.Wpf.Converters"
        mc:Ignorable="d ignore"
        x:Name="Window"
        
        Left="{Binding WindowSettings.Left, Mode=TwoWay}"
        Top="{Binding WindowSettings.Top, Mode=TwoWay}"
        Width="{Binding WindowSettings.Width, Mode=TwoWay}"
        Height="{Binding WindowSettings.Height, Mode=TwoWay}"
        WindowState="{Binding WindowSettings.State, Mode=TwoWay}"
        Title="{Binding Title}"
        ResizeMode="CanResizeWithGrip" d:DesignWidth="1016.552"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/vMixControllerSkin;component/MainSkin.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--<this:Help x:Key="Help"/>-->
            <Rect x:Key="IconViewbox">0.18,0.18,0.64,0.64</Rect>
            <Storyboard x:Key="StoryboardFadeIn">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Duration="0:0:0.5" To="1" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

            <Storyboard x:Key="StoryboardFadeOut">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

            <CompositeCollection x:Key="SubMenu" x:Shared="False">
                <MenuItem Icon="{x:Null}" ItemsSource="{x:Null}" Header="{e:Localize Add Widget}" Command="{Binding Main.CreateWidgetFromTemplateCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Icon="{x:Null}" ItemsSource="{x:Null}" Header="{e:Localize Edit Template}" Command="{Binding Main.EditWidgetTemplateCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}"/>
                <MenuItem Icon="{x:Null}" ItemsSource="{x:Null}" Header="{e:Localize Remove Template}" Command="{Binding Main.RemoveWidgetTemplateCommand, Source={StaticResource Locator}}" CommandParameter="{Binding}"/>
            </CompositeCollection>
            <Rectangle x:Key="DynamicIcon" x:Shared="False"  Width="16" Height="16" StrokeThickness="1">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding B.Color, FallbackValue=Black}"/>
                </Rectangle.Fill>
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{Binding B.BorderColor, FallbackValue=Black}"/>
                </Rectangle.Stroke>
            </Rectangle>
            <CompositeCollection x:Key="CreateItems" x:Shared="False">
                <MenuItem x:Name="Button" Command="{Binding CreateWidgetCommand}" CommandParameter="Button" Header="{e:Localize Button}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Material Design Icons">&#xF131;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Label" Command="{Binding CreateWidgetCommand}" CommandParameter="Label" Header="{e:Localize Label}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF02B;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Region" Command="{Binding CreateWidgetCommand}" CommandParameter="Region" Header="{e:Localize Region}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF2D0;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <!--<MenuItem Command="{Binding CreateWidgetCommand}" CommandParameter="Image" Header="Image"/>-->
                <MenuItem x:Name="List" Command="{Binding CreateWidgetCommand}" CommandParameter="List" Header="{e:Localize List}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF03A;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Score" Command="{Binding CreateWidgetCommand}" CommandParameter="Score" Header="{e:Localize Score}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF005;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="TextField" Command="{Binding CreateWidgetCommand}" CommandParameter="TextField" Header="{e:Localize Text Field}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Material Design Icons">&#xF60E;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Timer" Command="{Binding CreateWidgetCommand}" CommandParameter="Timer" Header="{e:Localize Timer}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Material Design Icons">&#xF51B;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Clock" Command="{Binding CreateWidgetCommand}" CommandParameter="Clock" Header="{e:Localize Clock}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Material Design Icons">&#xF150;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Volume" Command="{Binding CreateWidgetCommand}" CommandParameter="Volume" Header="{e:Localize Volume}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF1DE;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="TBar" Command="{Binding CreateWidgetCommand}" CommandParameter="TBar" Header="{e:Localize T-Bar}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">T</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="Playlist" Command="{Binding CreateWidgetCommand}" CommandParameter="Playlist" Header="{e:Localize Playlist}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xf00b;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="Container" Command="{Binding CreateWidgetCommand}" CommandParameter="Container" Header="{e:Localize Container}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF1B2;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="ExternalData" Command="{Binding CreateWidgetCommand}" ItemsSource="{Binding ExternalDataProviders}" CommandParameter="ExternalData" Header="{e:Localize External Data}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF1C0;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding A}"/>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                    <MenuItem.Resources>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding Main.CreateWidgetFromTemplateCommand, Source={StaticResource Locator}}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Icon" Value="{StaticResource DynamicIcon}"/>
                        </Style>
                    </MenuItem.Resources>
                </MenuItem>
                <MenuItem x:Name="MidiInterface" Command="{Binding CreateWidgetCommand}" CommandParameter="MidiInterface" Header="{e:Localize MIDI Device}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF0E7;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="MultiState" Command="{Binding CreateWidgetCommand}" CommandParameter="MultiState" Header="{e:Localize Multi State}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF233;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="Templates" Header="{e:Localize Templates}" ItemsSource="{Binding WidgetTemplates}" IsEnabled="{Binding Items.Count, Converter={wpfc:ObjectToStringEqualsParameterToInverseBoolConverter}, ConverterParameter=0, Mode=OneWay, RelativeSource={RelativeSource Self}}">

                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <TextBlock><Run Text="["/><InlineUIContainer>
									<TextBlock FontStyle="Italic" Text="{Binding B.Type}"/>
								</InlineUIContainer><Run Text="] "/><InlineUIContainer>
									<TextBlock Text="{Binding A}"/>
								</InlineUIContainer></TextBlock>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="ItemsSource" Value="{StaticResource SubMenu}"/>
                            <Setter Property="Icon" Value="{StaticResource DynamicIcon}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </CompositeCollection>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewKeyUp">
            <cmd:EventToCommand Command="{Binding PreviewKeyUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown">
            <cmd:EventToCommand Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseDown">
            <cmd:EventToCommand Command="{Binding PreviewMouseDown}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseUp">
            <cmd:EventToCommand Command="{Binding PreviewMouseUp}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <e:HideCloseButtonOnWindow IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}"/>
    </i:Interaction.Behaviors>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu VerticalContentAlignment="Center" HorizontalContentAlignment="Left">
            <MenuItem Header="{e:Localize File}">
                <MenuItem Command="{Binding NewControllerCommand}" Header="{e:Localize New}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF016;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding LoadControllerCommand}" Header="{e:Localize Open}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF07C;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Command="{Binding AppendControllerCommand}" Header="{e:Localize Append}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <Grid>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF07C;</TextBlock>
                                <TextBlock Foreground="White" FontSize="10" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF111;</TextBlock>
                                <TextBlock FontSize="10" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF055;</TextBlock>
                            </Grid>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Command="{Binding SaveControllerCommand}"  Header="{e:Localize Save}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF0C7;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <!--<MenuItem Command="{Binding GlobalVariablesCommand}" Header="{e:Localize Global Variables}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF02D;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>-->
                <MenuItem Command="{Binding DownloadUpdateCommand}">
                    <MenuItem.Header>
                        <TextBlock FontWeight="Bold">Download [<Run Text="{Binding AvailableVersion, StringFormat=MM/dd/yyy}"/>] Update</TextBlock>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF019;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UpdateLink}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <!--<MenuItem Command="{Binding ViewChangelogCommand}">
                    <MenuItem.Header>
                        <TextBlock FontWeight="Bold">View Changelog</TextBlock>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF15C;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UpdateLink}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>-->
                <MenuItem Command="{Binding AboutCommand}" Header="{e:Localize About}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF05A;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Command="{Binding ExitCommand}"  Header="{e:Localize Exit}">
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF08B;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}" Header="{e:Localize Edit}">
                <MenuItem IsEnabled="{Binding UndoState, Converter={wpfc:ValueNullToInverseBoolConverter}}" Command="{Binding UndoCommand}">
                    <MenuItem.Header>
                        <StackPanel>
                            <TextBlock Text="{e:Localize Undo}"/>
                            <TextBlock Foreground="Gray" FontSize="10" Text="{Binding UndoReason}" Visibility="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=MenuItem, Mode=FindAncestor}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF0E2;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Command="{Binding DuplicateSelectedCommand}">
                    <MenuItem.Header>
                        <TextBlock Text="{e:Localize Duplicate Selected}"/>
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Border Width="16" Height="16">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#FontAwesome">&#xF0c5;</TextBlock>
                        </Border>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}" Header="{e:Localize Widget}" ItemsSource="{DynamicResource CreateItems}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    </Style>
                </MenuItem.ItemContainerStyle>

            </MenuItem>
            <MenuItem ToolTip="{e:Localize Click \= Lock widgets\, Shift+Click \= Lock with password}" Header="{Binding WindowSettings.Locked}" Command="{Binding ToggleLockCommand}">
                <MenuItem.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Material Design Icons" x:Name="LockedIcon"></TextBlock>
                            <TextBlock Text="Lock"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding}" Value="True">
                                <Setter Property="Text" Value="&#xF33E;" TargetName="LockedIcon"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding}" Value="False">
                                <Setter Property="Text" Value="&#xF340;" TargetName="LockedIcon"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </MenuItem.HeaderTemplate>
            </MenuItem>
            <MenuItem ToolTip="{e:Localize Sync UTC to vMix state}" Header="{Binding Status}" Command="{Binding SyncStateCommand}">
                <MenuItem.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Ellipse Width="8" Height="8" Margin="0,0,8,0" Stroke="Black">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{Binding Converter={c:StatusToColorConverter}}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock Text="{e:Localize Sync}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </MenuItem.HeaderTemplate>
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="Sync">
                                <Setter Property="FontWeight" Value="Bold"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </Menu>
        <ScrollViewer Tag="{Binding IsHotkeysEnabled, Converter={wpfc:BoolToInverseBoolConverter}}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="1" IsManipulationEnabled="True" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" Background="Black">
            <TabControl SelectedIndex="{Binding SelectedTab, Mode=TwoWay}" BorderThickness="0" Background="#1e2328">
                <TabItem Style="{StaticResource GrayItemStyle}" Header="Settings" IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}">
                    <StackPanel Margin="{StaticResource StdMargin}">
                        <Grid Margin="{StaticResource TopBottomStdMargin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource PropertyName}" Margin="{StaticResource RightStdMargin}" FontSize="14"><Run Text="Window Properties"/></TextBlock>
                            <Border VerticalAlignment="Center" Grid.Column="1" BorderThickness="0,2,0,0" BorderBrush="White"/>
                        </Grid>

                        <skin:PropertiesListView HorizontalContentAlignment="Stretch" Background="Transparent" BorderThickness="0">
                            <!--<ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel HorizontalAlignment="Stretch"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="{StaticResource StdMargin}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Background="{StaticResource Main.Gradient}">
                                            <TextBlock Margin="8,0,0,0" Padding="{StaticResource StdMargin}" Style="{StaticResource PropertyName}"><Run Text="{Binding Tag}"/></TextBlock>
                                        </Grid>
                                        <ContentPresenter Grid.Column="1" Content="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>-->
                            <CompositeCollection>
                                <TextBox Style="{StaticResource WidgetTextBox}" Tag="IP" IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}" Text="{Binding WindowSettings.IP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding IsUrlValid, Converter={c:BoolToSolidColorBrushConverter}, ConverterParameter=1}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewKeyUp">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxPreviewKeyUp, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="GotFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxGotFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxLostFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBox Style="{StaticResource WidgetTextBox}" Tag="Port" IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}" Text="{Binding WindowSettings.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding IsUrlValid, Converter={c:BoolToSolidColorBrushConverter}, ConverterParameter=1}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewKeyUp">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxPreviewKeyUp, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="GotFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxGotFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxLostFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <TextBox Style="{StaticResource WidgetTextBox}" Tag="Poll Time, msec" IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}" Text="{Binding WindowSettings.PollTime, Mode=TwoWay}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewKeyUp">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxPreviewKeyUp, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="GotFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxGotFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxLostFocus, Source={StaticResource Locator}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <Grid Tag="Scaling">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto" MinWidth="64"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Slider Value="{Binding WindowSettings.UIScale, Mode=TwoWay}" Minimum="0.5" Maximum="5"/>
                                    <TextBlock Grid.Column="1" Style="{StaticResource PropertyName}" Margin="{StaticResource LeftStdMargin}" Text="{Binding WindowSettings.UIScale, StringFormat=0.00}"/>
                                    <Button Grid.Column="2" Padding="8,0" Command="{Binding ResetScalingCommand}">Reset</Button>
                                </Grid>
                                <CheckBox Tag="Open Last At Start" IsChecked="{Binding WindowSettings.OpenLastAtStart, Mode=TwoWay}"/>
                                <CheckBox Tag="Is Topmost" IsChecked="{Binding WindowSettings.IsTopmost, Mode=TwoWay}"/>
                                <Border Tag="Enable Log">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding WindowSettings.EnableLog, Mode=TwoWay}"/>
                                        <Button Margin="4,0,0,0" VerticalAlignment="Center" FontSize="10" Height="16" Command="{Binding OpenLogFolder}">Open Log Folder</Button>
                                    </StackPanel>
                                </Border>

                                <CheckBox Tag="Show Widget Lock" IsChecked="{Binding WindowSettings.ShowIndividualLock, Mode=TwoWay}"/>
                                <CheckBox Tag="Blink Lights (need restart)" IsChecked="{Binding WindowSettings.BlinkLights, Mode=TwoWay}"/>
                            </CompositeCollection>
                        </skin:PropertiesListView>
                        <Grid Background="Transparent" DataContext="{Binding GlobalSettings, Source={StaticResource Locator}}">
                            <Grid.Resources>
                                <Style TargetType="{x:Type ListView}">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Background="#1E2328" BorderBrush="#18488C" x:Name="Border" Margin="0,0,0,4" Padding="1" BorderThickness="1" DataContext="{Binding Source={StaticResource Locator}}">
                                                    <ContentPresenter />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                    <Grid Margin="{StaticResource TopBottomStdMargin}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Style="{StaticResource PropertyName}" Margin="{StaticResource RightStdMargin}" Text="{e:Localize Static Global Variables}" FontSize="14"/>
                                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                                            <Button ToolTip="{e:Localize Add Variable}" Margin="2,0" Style="{StaticResource TitleButton}" Command="{Binding AddItemCommand}" Content="&#xF415;"/>
                                            <Control Style="{StaticResource HelpBorder}" Margin="{StaticResource LeftRightStdMargin}" ToolTip="{x:Static this:Help.StaticVariables_Default}"/>
                                        </StackPanel>
                                        <Border VerticalAlignment="Center" Grid.Column="3" BorderThickness="0,2,0,0" BorderBrush="White"/>
                                        <Grid HorizontalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock HorizontalAlignment="Center">Name</TextBlock>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="1">Value</TextBlock>
                                        </Grid>
                                    </Grid>
                                    <ListView BorderBrush="Transparent" ItemsSource="{Binding Variables}" Background="Transparent">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Background="{StaticResource Main.Gradient}">
                                                        <TextBox CaretBrush="White" FontWeight="Bold" Margin="8,2,2,2" Text="{Binding A, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,0,0,1">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="PreviewKeyUp">
                                                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxPreviewKeyUp, Source={StaticResource Locator}}"/>
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxGotFocus, Source={StaticResource Locator}}"/>
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxLostFocus, Source={StaticResource Locator}}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                            <TextBox.Style>
                                                                <Style TargetType="TextBox">
                                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                    </Border>
                                                    <TextBox Background="Transparent" Foreground="White" CaretBrush="White" BorderThickness="0,0,0,1" Margin="2" Grid.Column="1" Text="{Binding B, UpdateSourceTrigger=PropertyChanged}" FontWeight="Regular">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewKeyUp">
                                                                <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxPreviewKeyUp, Source={StaticResource Locator}}"/>
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="GotFocus">
                                                                <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxGotFocus, Source={StaticResource Locator}}"/>
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="LostFocus">
                                                                <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding Main.TextBoxLostFocus, Source={StaticResource Locator}}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                    <Button ToolTip="{e:Localize Remove Variable}" CommandParameter="{Binding}" Margin="2,0" Style="{StaticResource TitleButton}" Command="{Binding GlobalSettings.RemoveItemCommand, Source={StaticResource Locator}}" Content="&#xF374;" Grid.Column="2"/>
                                                </Grid>

                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                        <ListView.Style>
                                            <Style>
                                                <Setter Property="ListView.ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="ListViewItem">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ListViewItem">
                                                                        <Border Margin="0,2">
                                                                            <ContentPresenter/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Variables.Count}" Value="0">
                                                        <DataTrigger.Setters>
                                                            <Setter Property="ListView.Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ListView">
                                                                        <Border Margin="0,2">
                                                                            <TextBlock TextAlignment="Center" Style="{StaticResource CaptionText}">CLICK "Append Variable" TO ADD NEW VARIABLE</TextBlock>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger.Setters>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListView.Style>
                                    </ListView>
                                    <Button Width="Auto" Margin="2,0" Style="{StaticResource TitleButton}" Command="{Binding AddItemCommand}" Content="Append Variable"/>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem IsSelected="True" Style="{StaticResource GrayItemStyle}" Foreground="White">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock VerticalAlignment="Center">Layout</TextBlock>
                            <ComboBox x:Name="Page" SelectedIndex="{Binding PageIndex, Mode=TwoWay}" IsEditable="False" MinWidth="128" Margin="8,0,0,0" ItemsSource="{StaticResource Pages}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Border Width="16" Height="16" Margin="{StaticResource RightStdMargin}">
                                                <Border.Background>
                                                    <SolidColorBrush>
                                                        <SolidColorBrush.Color>
                                                            <MultiBinding  Converter="{c:ColorsListToColorConverter}">
                                                                <Binding Source="{x:Static vm:vMixWidgetSettingsViewModel.Colors}"/>
                                                                <Binding Converter="{c:ObjectToIndexConverter}" ConverterParameter="{StaticResource Pages}"/>
                                                            </MultiBinding>
                                                        </SolidColorBrush.Color>
                                                    </SolidColorBrush>
                                                </Border.Background>
                                            </Border>
                                            <TextBlock Grid.Column="12">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{c:StringListToStringConverter}">
                                                        <Binding Source="{StaticResource Locator}" Path="Main.WindowSettings.Pages"/>
                                                        <Binding Converter="{c:ObjectToIndexConverter}" ConverterParameter="{StaticResource Pages}"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>

                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Button ToolTip="{e:Localize Rename Page}" Style="{StaticResource TitleButton}" Command="{Binding EditPageNameCommand}" CommandParameter="{Binding PageIndex}" IsEnabled="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}">
                                <TextBlock FontFamily="/vMixControllerSkin;Component/#FontAwesome" Text="&#xf040;"/>
                            </Button>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid Name="LayoutGrid" Tag="{Binding WindowSettings.Locked, Mode=TwoWay}">
                        <TextBlock Margin="-10,-30" FontFamily="Segoe UI" Opacity="0.25" FontSize="120" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                            <TextBlock.Text>
                                <MultiBinding Converter="{c:StringListToStringConverter}">
                                    <Binding Source="{StaticResource Locator}" Path="Main.WindowSettings.Pages"/>
                                    <Binding Source="{StaticResource Locator}" Path="Main.PageIndex"/>
                                </MultiBinding>
                            </TextBlock.Text>
                            <TextBlock.Foreground>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <MultiBinding  Converter="{c:ColorsListToColorConverter}">
                                            <Binding Source="{x:Static vm:vMixWidgetSettingsViewModel.Colors}"/>
                                            <Binding Path="PageIndex"/>
                                        </MultiBinding>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </TextBlock.Foreground>
                        </TextBlock>
                        <ListView VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.IsContainerVirtualizable="True" x:Name="Layout" BorderThickness="0" ItemsSource="{Binding Widgets}" Background="Transparent" ContextMenuOpening="Layout_ContextMenuOpening">
                            <ListView.ContextMenu>
                                <ContextMenu x:Name="CreateContextMenu" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" ItemsSource="{DynamicResource CreateItems}">
                                    <ContextMenu.Resources>
                                        <cls:BindingProxy x:Key="proxy" Data="{Binding}" />
                                    </ContextMenu.Resources>
                                    <ContextMenu.ItemContainerStyleSelector>
                                        <cls:MenuStyleSelector>
                                            <cls:MenuStyleSelector.MenuItem>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="IsEnabled" Value="{Binding WindowSettings.Locked, Converter={wpfc:BoolToInverseBoolConverter}}"/>
                                                </Style>
                                            </cls:MenuStyleSelector.MenuItem>
                                        </cls:MenuStyleSelector>
                                    </ContextMenu.ItemContainerStyleSelector>
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <ResourceDictionary Source="Skins/ControlTemplates.xaml"/>
                                    </ResourceDictionary.MergedDictionaries>
                                </ResourceDictionary>
                            </ListView.Resources>
                            <ListView.Style>
                                <Style TargetType="ListView">
                                    <Setter Property="ItemTemplateSelector">
                                        <Setter.Value>
                                            <ctrls:TypeTemplateSelector Page="0"/>
                                        </Setter.Value>
                                    </Setter>
                                    <!--<Style.Triggers>
                                        <DataTrigger Binding="{Binding PageIndex}">
                                            <DataTrigger.Value>
                                                <sys:Int32>1</sys:Int32>
                                            </DataTrigger.Value>
                                            <Setter Property="ItemTemplateSelector">
                                                <Setter.Value>
                                                    <ctrls:TypeTemplateSelector Page="1"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>-->
                                </Style>
                            </ListView.Style>

                            <ListView.Cursor>
                                <Binding Converter="{c:StringToCursorConverter}" Mode="OneWay" Path="EditorCursor"/>
                            </ListView.Cursor>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding MouseButtonUp}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="ContextMenuOpening">
                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding ContextMenuOpening}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="ContextMenuClosing">
                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding ContextMenuClosing}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding MouseButtonDown}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding MouseMove}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <e:IgnoreMouseWheelBehavior IgnoreBehavior="{Binding IsHotkeysEnabled, Converter={wpfc:BoolToInverseBoolConverter}}"/>
                            </i:Interaction.Behaviors>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid VirtualizingPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" IsItemsHost="True" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Grid.LayoutTransform>
                                            <ScaleTransform ScaleX="{Binding Main.WindowSettings.UIScale, Source={StaticResource Locator}}" ScaleY="{Binding Main.WindowSettings.UIScale, Source={StaticResource Locator}}"/>
                                        </Grid.LayoutTransform>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Margin">
                                        <Setter.Value>
                                            <MultiBinding Converter="{c:DoubleToThicknessConverter}">
                                                <Binding Path="Left"/>
                                                <Binding Path="Top"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <!--</Setter> Value="{Binding Left}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Top}"/>-->
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <Border BorderBrush="White" BorderThickness="2" Opacity="0" Background="DarkSlateGray" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="2" Margin="2" IsHitTestVisible="False">
                            <TextBlock FontSize="18" TextAlignment="Center">Click on the layout to add widget(s).
                                <LineBreak/>
                            Or press ESC to cancel.</TextBlock>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditorCursor}" Value="Arrow">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard Storyboard.TargetProperty="Opacity">
                                                        <DoubleAnimation To="0" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard Storyboard.TargetProperty="Opacity">
                                                        <DoubleAnimation To="1" Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Grid Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding SelectorPosition}" Width="{Binding SelectorWidth}" Height="{Binding SelectorHeight}" Visibility="{Binding SelectorEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" IsHitTestVisible="False" Background="#7F00FFFF"/>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Grid.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0 0 8 8"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Tag">
                                        <Trigger.Value>
                                            <sys:Boolean>True</sys:Boolean>
                                        </Trigger.Value>
                                        <Setter Property="Background" Value="#FF1E2328"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </TabItem>
            </TabControl>
        </ScrollViewer>
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,8,0">
                        HTTP://<Run FontWeight="Bold" Text="{Binding WindowSettings.IP}"/>:<Run FontWeight="Bold" Text="{Binding WindowSettings.Port}"/>
                    </TextBlock>
                    <Ellipse Width="16" Height="16" Margin="{StaticResource RightStdMargin}" Stroke="Black">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{Binding Status, Converter={c:StatusToColorConverter}}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <TextBlock Text="{Binding Status, Converter={c:EnumToStringConverter}}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem  HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                <CheckBox IsChecked="{Binding LIVE, Mode=TwoWay}" FontWeight="Bold" Width="64" HorizontalContentAlignment="Center">
                    <CheckBox.Content>
                        <TextBlock HorizontalAlignment="Center">LIVE</TextBlock>
                    </CheckBox.Content>
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Setters>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CheckBox">
                                            <Grid x:Name="back" Background="Red">
                                                <ContentPresenter Margin="2"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Background" Value="Yellow" TargetName="back"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style.Setters>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StatusBarItem>

            <!--<StatusBarItem  HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                <CheckBox IsChecked="{Binding WindowSettings.IsTopmost, Mode=TwoWay}">Is Topmost</CheckBox>
            </StatusBarItem>
            <StatusBarItem  HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                <CheckBox IsChecked="{Binding WindowSettings.EnableLog, Mode=TwoWay}">Enable Log</CheckBox>
            </StatusBarItem>-->
            <StatusBarItem HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Margin="0,0,8,0" IsChecked="{Binding IsGhosted, Mode=TwoWay}" ToolTip="Make top layer transparent" IsEnabled="{Binding WindowSettings.Locked, Mode=OneWay, Converter={wpfc:BoolToInverseBoolConverter}}">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Style.Setters>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Grid Background="Aqua">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock FontFamily="/vMixControllerSkin;Component/#FontAwesome" VerticalAlignment="Center" x:Name="Icon"/>
                                                        <ContentPresenter VerticalAlignment="Center" Margin="2"/>
                                                    </StackPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Text" Value="&#xf06e;" TargetName="Icon"/>
                                                        <Setter Property="Content" Value="Ghosted"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Text" Value="&#xf070;" TargetName="Icon"/>
                                                        <Setter Property="Content" Value="Visible"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style.Setters>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <!--<Button Margin="0,0,8,0" Command="{Binding RegisterNDIFilters}">Register Filters</Button>-->
                    <TextBlock>
                    <Hyperlink ToolTip="{e:Localize Support vMix Universal Title Controller!}" NavigateUri="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=WT9QZ2XH97HMN&amp;lc=US&amp;item_name=vMix%20Universal%20Title%20Controller&amp;currency_code=USD&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted" RequestNavigate="Hyperlink_RequestNavigate">
                        <Image Source="/vMixControllerSkin;component\btn_donate_SM.gif" Stretch="None" Cursor="Hand"/>
                    </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Border x:Name="Loading" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="3" Cursor="Wait" Visibility="Collapsed">
            <Border.Background>
                <DrawingBrush Viewport="0,0,4,4" ViewportUnits="Absolute" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{StaticResource Main.Background}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,8,8" />
                                        <RectangleGeometry Rect="8,8,8,8" />
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                            <GeometryDrawing Brush="#AA000000">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="8,0,8,8" />
                                        <RectangleGeometry Rect="0,8,8,8" />
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Border.Background>
            <Border Width="256" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{StaticResource Main.Background}" BorderBrush="{StaticResource Main.Foreground}" BorderThickness="4" Padding="{StaticResource StdMargin}">
                <StackPanel>
                    <TextBlock HorizontalAlignment="Center" FontFamily="/vMixControllerSkin;Component/#Segoe UI Mono" Foreground="White" FontSize="48">loading</TextBlock>
                    <ProgressBar BorderThickness="0" Background="Transparent" Foreground="White" IsIndeterminate="True" Height="16"/>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
